generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(cuid())
  email              String              @unique
  name               String
  token              String?
  password           String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt

  Submission         Submission[]
  Problem            Problem[]
}

model Problem {
  id                 String              @id @default(cuid())
  title              String
  description        String
  constraints        String
  difficulty         Difficulty          @default(MEDIUM)
  ownerCode          String
  contestId          String?
  topics             String[]
  companies          String[]
  userId             String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt

  Submission         Submission[]
  Topic              Topic[]
  Company            Company[]
  addedBy            User               @relation(fields: [userId], references: [id])
}

model Topic {
  id                 String              @id @default(cuid())
  topic              String
  problemId          String

  topicOf            Problem             @relation(fields: [problemId], references: [id])
}

model Company{
  id                 String              @id @default(cuid())
  company            String
  problemId         String

  companyAskedIn   Problem             @relation(fields: [problemId], references: [id])
}

model Submission {
  id                 String              @id @default(cuid())
  problemId          String
  userId             String
  userCode           String
  status             SubmissionResult    @default(PENDING)
  memory             Int?
  time               Float?
  totalTestcases     Int
  evaluatedTestcases Int?                @default(0)
  ce                 Int?                @default(0)
  re                 Int?                @default(0)
  tle                Int?                @default(0)
  mle                Int?                @default(0)
  ac                 Int?                @default(0)

  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  user               User                @relation(fields: [userId], references: [id])
  problem            Problem             @relation(fields: [problemId], references: [id])
  submittedTestcase Submitted_testcase[]
}

model Language {
  id                 Int                @id @default(autoincrement())
  name               String
  DefaultCode        String
  judge0Id           Int                @unique
}

model Testcase {
  id                 String              @id @default(cuid())
  problemId          String
  inputPath          String
  expOutputPath      String
  isExample          Boolean             @default(false)

  submitted_testcase Submitted_testcase[]
}

model Submitted_testcase {
  id                 String              @id @default(cuid())
  testcaseId         String
  submissionId       String
  status             SubmissionResult    @default(PENDING)
  output             String?
  time               Int?
  memory             Int?

  testcase           Testcase            @relation(fields: [testcaseId], references: [id])
  submission         Submission          @relation(fields: [submissionId], references: [id])
}

enum SubmissionResult {
  AC
  REJECTED
  PENDING
  TLE
  MLE
  CE
  RE
}

enum UserRole {
  ADMIN
  USER
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}
